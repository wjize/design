---------------
static lib make:
  1. g++/gcc -c func1.cpp func2.cpp ...
  2. ar rcs libfunc1.a func1.o func2.o ...
static lib use:
  1. g++/gcc -o hello main.cpp -I./include -L./lib -lfunc1

dynamic lib make:
  1. g++/gcc -fpic -c func1.cpp func2.cpp ..
  2. g++/gcc -shared func1.o func2.o libfunc2.so
dynamic lib use:
  1. g++/gcc -o hello main.cpp -I./include -L./lib -lfunc2

---------------
makefile:
  makefile文件是用来管理项目工程文件的,通过执行make命令,make就会解析并执行makefil文件。
  makefile命名: makefile或Makefile

makefile rule:
  目标: 依赖
  (tab)命令
  > 目标: 要生成d的目标文件
  > 依赖: 目标文件由哪些文件生产
  > 命令: 通过执行该命令由依赖文件生成目标

makefile中提供了一下变量提供,可直接使用:
  CC = g++/gcc #arm-linux-gcc
  CPPFLAGS: C预处理的选项 -I
  CFLAGS:   C编译器的选项 -Wall -g -c
  LDFLAGS:  链接器选项 -L
自动变量:
  > $@: 表示规则中的目标
  > $<: 表示规则中的第一个条件
  > $^: 表示规则中的所有条件,组成一个列表,以空格隔开,如果这个列表中有重复的项则消除重复项
